plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    //id "org.felix.osgi" version "0.46"


}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated-sources/jaxb'
        }
    }
}

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.schema = "src/main/resources/products" +
            ".xsd"

    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}
dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    //implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'wsdl4j:wsdl4j'
    implementation 'org.osgi:org.osgi.core:6.0.0'


    jaxb("org.glassfish.jaxb:jaxb-xjc")

    implementation "com.aerospike:aerospike-client:6.0.0"
    implementation 'commons-cli:commons-cli:1.5.0'


    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-all:1.10.19'

}

compileJava.dependsOn genJaxb

tasks.named('test') {
    useJUnitPlatform()
}

